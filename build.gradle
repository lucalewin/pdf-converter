import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'net.lucraft'
version '1.0.0'

repositories {
    mavenCentral()
}

project.description = """
Lucraft PDF-Converter Description
"""

ext {
    junitVersion = '5.7.2'
}

sourceCompatibility = '16'
targetCompatibility = '16'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'lucraft.converter'
    mainClass = 'net.lucraft.converter.Main'
}

javafx {
    version = '16'
    modules = [
            'javafx.controls',
            'javafx.fxml',
            'javafx.web',
            'javafx.swing'
    ]
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.0')
    implementation('com.dlsc.formsfx:formsfx-core:11.4.2') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.1.13') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.2.0')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:16.0.3') {
        exclude(group: 'org.openjfx')
    }

    implementation('com.itextpdf:itext7-core:7.1.16')
    implementation('commons-io:commons-io:2.6')
    implementation('org.jetbrains:annotations:22.0.0')
    implementation('com.google.code.gson:gson:2.8.8')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    addExtraDependencies("javafx")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'PDF Converter'
    }
    jpackage {
        installerOptions = [
                '--description', project.description,
                '--copyright', 'Copyrigth 2021 Luca Lewin',
                '--vendor', 'Luca Lewin'
        ]

        if (project.hasProperty('installerType')) {
            installerType = project.findProperty('installerType') // we will pass this from the command line (example: -PinstallerType=msi)
            if (installerType == 'msi') {
                imageOptions += ['--icon', 'src/main/resources/net/lucraft/converter/icons/favicon.ico']
                installerOptions += [
                        '--install-dir', 'lucraft/pdf-converter/',
                        '--win-per-user-install', '--win-dir-chooser',
                        '--win-menu', '--win-shortcut'
                ]
            }
            if (installerType == 'pkg') {
                imageOptions += ['--icon', 'src/main/resources/pdfdecorator/gui/icon.icns']
            }
            if (['deb', 'rpm'].contains(installerType)) {
                imageOptions += ['--icon', 'src/main/resources/net/lucraft/converter/icons/icon.png']
                installerOptions += [
                        '--linux-menu-group', 'Office',
                        '--linux-shortcut'
                ]
            }
//            if (installerType == 'deb') {
//                installerOptions += [
////                        '--linux-deb-maintainer', 'maintainer@example.com'
//                ]
//            }
//            if (installerType == 'rpm') {
//                installerOptions += [
////                        '--linux-rpm-license-type', 'GPLv3'
//                ]
//            }
        } else {
            println("property 'installerType' has to be specified!")
        }
    }
}

jpackage {
    doFirst {
        project.getProperty('installerType') // throws exception if its missing
    }
}